{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Installation","text":"<p>You need to install wordslab on each host machine on which you want to create, start and stop a local virtual machine.</p> <p>You can manage all your cloud virtual machines from a single wordslab manager installation.</p> <p>You can install wordslab manager on:</p> <ul> <li> Windows 10+</li> <li> Linux - Ubuntu 18.04+</li> <li> macOS - Catalina+</li> </ul> <p>You don't need to be an administrator or to have root/sudo privileges to install and use wordslab manager, or even to create a local virtual machine.</p> <p>But you may need admin privileges to install some prerequisites on the machine (see below). </p> <p>The wordslab manager installation and its data always stays confined to the current user account.</p> <p>wordslab manager will check and install for you all the necessary prerequisites.</p>"},{"location":"#os-support-and-prerequisites","title":"OS support and prerequisites","text":"<p>Prerequisites to create a local virtual machine</p> WindowsLinuxmacOS <ul> <li>Windows 10 version 1903+ x64</li> <li>10 GB of free disk space</li> <li>Admin privileges are only needed to enable Windows Subsystem for Linux</li> </ul> <ul> <li>Ubuntu version 18.04+ x64</li> <li>Not tested but should also work if qemu is installed :</li> <li>Arch: pacman -S qemu</li> <li>Debian/Ubuntu: apt-get install qemu</li> <li>Fedora: dnf install @virtualization</li> <li>Gentoo: emerge --ask app-emulation/qemu</li> <li>RHEL/CentOS: yum install qemu-kvm</li> <li>SUSE: zypper install qemu</li> <li>10 GB of free disk space</li> <li>Admin privileges are only needed to install cpu-checker qemu qemu-utils qemu-kvm </li> </ul> <ul> <li>macOS 10.15+ x64</li> <li>10 GB of free disk space</li> <li>Admin privileges are only needed to install homebrew</li> </ul> <p>Prerequisites to use a GPU in local virtual machine</p> WindowsLinuxmacOS <ul> <li>Nvidia GPU with Pascal (GTX 1050) and later GPU architecture        </li> <li>Windows 10 version 21H2+ (build 19044+) or Windows 11 x64</li> <li>Nvidia driver version &gt;= 496.76 (16 nov 2021)</li> <li>Windows Subsystem for Linux Kernel version 5.10.16.3 or later</li> </ul> <ul> <li>GPU sharing between host and guest OS on Linux is not supported</li> </ul> <ul> <li>GPU sharing between host and guest OS on macOS is not supported</li> </ul>"},{"location":"#installation-instructions","title":"Installation instructions","text":"<p>You can find the changelog for all wordslab manager releases in the Github repository: https://github.com/wordslab-org/wordslab/releases.</p> <p>To download and install wordslab manager, open a terminal and copy the installation commands below.</p> <p>Installation commands</p> WindowsLinuxmacOS <pre><code>set installdir=%HOMEPATH%\\wordslab\nmkdir %installdir%\ncurl -L -o %installdir%\\wordslab-win-x64.zip https://github.com/wordslab-org/wordslab/releases/download/v0.9.2/wordslab-win-x64.zip\ntar -x -f %installdir%\\wordslab-win-x64.zip -C %installdir%\ndel %installdir%\\wordslab-win-x64.zip\ncd %installdir%\nwordslab version\n</code></pre> <pre><code>installdir=$HOME/wordslab\nmkdir $installdir\ncurl -L -o $installdir/wordslab-linux-x64.tar.gz https://github.com/wordslab-org/wordslab/releases/download/v0.9.2/wordslab-linux-x64.tar.gz\ntar -xf $installdir/wordslab-linux-x64.tar.gz -C $installdir\nrm $installdir/wordslab-linux-x64.tar.gz\ncd $installdir\n./wordslab version\n</code></pre> <pre><code>installdir=$HOME/wordslab\nmkdir $installdir\ncurl -L -o $installdir/wordslab-osx-x64.tar.gz https://github.com/wordslab-org/wordslab/releases/download/v0.9.2/wordslab-osx-x64.tar.gz\ntar -xf $installdir/wordslab-osx-x64.tar.gz -C $installdir\nrm $installdir/wordslab-osx-x64.tar.gz\ncd $installdir\n./wordslab version\n</code></pre>"},{"location":"#quick-start","title":"Quick start","text":"<p>If your goal is to install the built-in notebooks app, you can execute a single command:</p> <p>wordslab install notebooks</p> <p>This command will: - check and prepare your machine will all the prerequisites - create a local virtual machine called \"dev\" with the recommended configuration - download and deploy the \"notebooks\" app for a GPU environment</p> <p>The command line will print the URL at which you will be able to access your Jupyterlab environment after a few minutes of patience.</p> <p>You can then use the following command to monitor, start and stop your virtual machine from a web UI:</p> <p>wordslab manager</p>"},{"location":"overview/","title":"Overview","text":""},{"location":"overview/#discover-wordslab-manager","title":"Discover wordslab manager","text":"<ol> <li> <p>Launch a terminal.</p> </li> <li> <p>Navigate to your wordslab installation directory.</p> </li> <li> <p>Execute wordslab --help or wordslab [command] --help to discover the commands syntax.</p> </li> <li> <p>Execute wordslab host system info to analyze the hardware and software of your host machine.</p> </li> </ol>"},{"location":"overview/#create-a-sandbox-on-your-host-machine","title":"Create a sandbox on your host machine","text":"<ol> <li>Execute wordslab host init to initialize a sandbox on your host machine.</li> </ol> <p>This command will: - check the minimum hardware prerequisites - install all the software prerequisites on your machine - let you select the directories in which you want to store your virtual disks - let you configure resource consumption limits to protect your host machine - store all this information in a config database for future reference</p>"},{"location":"overview/#create-a-new-local-virtual-machine","title":"Create a new local virtual machine","text":"<ol> <li>Execute wordslab host vm create [name] to create a local virtual machine named [name].</li> </ol> <p>This command will prompt you with all the information necessary to configure the new virtual machine.</p>"},{"location":"overview/#list-the-local-virtual-machines","title":"List the local virtual machines","text":"<ol> <li>Execute wordslab host vm list.</li> </ol> <p>This command will give you the local virtual machines stored on on your host machine, and several properties regarding their current state.</p>"},{"location":"overview/#start-and-stop-a-local-virtual-machine","title":"Start and stop a local virtual machine","text":"<ol> <li> <p>Execute wordslab host vm start [name].</p> </li> <li> <p>Execute wordslab host vm stop [name].</p> </li> </ol> <p>These commands will start / stop a local virtual machine, but will also set the host machine network so that you can access them (which may require admin privileges if you requested firewall openings for example).</p>"},{"location":"overview/#download-and-deploy-a-kubernetes-app-on-a-running-virtual-machine","title":"Download and deploy a Kubernetes app on a running virtual machine","text":"<ol> <li>Execute wordslab app download [vm] [url] where [vm] is the virtual machine name and [url] is a Kubernetes app URL.</li> </ol> <p>Example of Kubernetes app provided by wordslab : https://raw.githubusercontent.com/wordslab-org/wordslab/main/wordslab.manager/apps/notebooks/wordslab-notebooks-gpu-app.yaml</p> <ol> <li>Execute wordslab app list [vm] to get the ID of the specific version of a Kubernetes application you want to deploy.</li> </ol> <p>Example of Kubernetes app ID : EIwKfHXcw/0VPijBmAXb/kmVvVBQNf/kIvWlClakako=</p> <ol> <li> <p>Execute wordslab app deployment create [vm] [ID] to deploy the Kubernetes app in a namespace of your choice.</p> </li> <li> <p>Execute wordslab app deployment list [vm] to get the local URLs at which you can access the application.</p> </li> </ol> <p>Example of URLs: - Jupyterlab: http://127.0.0.1/notebooks/lab - Web interface (port 7860): http://127.0.0.1/notebooks/gradio - API endpoint (port 8000): http://127.0.0.1/notebooks/fastapi</p>"},{"location":"wordslab-app-commands/","title":"Managing Kubernetes applications","text":"<p>Command line syntax to manage your Kubernetes applications:</p> <p>wordslab app : Manage kubernetes applications in your virtual machines</p>"},{"location":"wordslab-app-commands/#download-applications","title":"Download applications","text":"<p>wordslab app info [url] : Show detailed information about a kubernetes app from its URL - [url] : Kubernetes app URL</p> <p>Example application URL for the \"notebooks\" built-in app :  - https://raw.githubusercontent.com/wordslab-org/wordslab/main/wordslab.manager/apps/notebooks/wordslab-notebooks-gpu-app.yaml</p> <p>wordslab app download [vm] [url] : Download a new kubernetes app in a running virtual machine - [vm] : Virtual machine name - [url] : Kubernetes app URL</p> <p>wordslab app list [vm] : List all kubernetes apps downloaded in a running virtual machine - [vm] : Virtual machine name</p> <p>wordslab app remove [vm] [ID] : Remove all files previously downloaded for a kubernetes app in a vm - [vm] : Virtual machine name - [ID] : Kubernetes app ID (selected in the output of the app list command)</p>"},{"location":"wordslab-app-commands/#deploy-applications","title":"Deploy applications","text":"<p>wordslab app deployment : Manage kubernetes app deployments in your virtual machines</p> <p>wordslab app deployment list [vm] : List all kubernetes app deployments in a running virtual machine - [vm] : Virtual machine name</p> <p>wordslab app deployment create [vm] [ID] : Deploy a previoulsy downloaded kubernetes app in a running virtual machine - [vm] : Virtual machine name - [ID] : Kubernetes app ID (selected in the output of the app list command)</p> <p>wordslab app deployment stop [vm] [namespace] : Temporarily free CPU and memory resources allocated to a kubernetes app deployment - [vm] : Virtual machine name - [namespace] : Kubernetes app deployment namespace</p> <p>wordslab app deployment start [vm] [namespace] : Restart a previously stopped kubernetes app deployment in a running virtual machine - [vm] : Virtual machine name - [namespace] : Kubernetes app deployment namespace</p> <p>wordslab app deployment delete [vm] [namespace] : Delete a kubernetes app deployment in a running virtual machine - [vm] : Virtual machine name - [namespace] : Kubernetes app deployment namespace</p>"},{"location":"wordslab-app-commands/#example-wordslab-kubernetes-app-syntax","title":"Example wordslab Kubernetes app syntax :","text":"<p>Extract of a valid yaml file for a wordslab Kubernetes app:</p> <pre><code>apiVersion: traefik.containo.us/v1alpha1\nkind: IngressRoute\nmetadata:\n  name: wordslab-notebooks-ingressroute\n  labels:\n    wordslab.org/app: wordslab-notebooks\n    wordslab.org/component: jupyterlab\n  annotations:\n    wordslab.org/namespace-default: \"notebooks\"\n    wordslab.org/title: \"Jupyterlab notebooks (GPU)\"\n    wordslab.org/description: \"Ubuntu 22.04, Cuda 12.2, Python 3.10, Pytorch 2.0 / Tensorflow 2.13 / JAX 0.4 / scikit-learn 0.23, Jupyterlab 3.6\"\n    wordslab.org/version: \"jupyterlab-3.6.5-lambda-0.1.14-22.04.1_2\"\n    wordslab.org/date: \"09/17/2023\"\n    wordslab.org/homepage: \"https://www.wordslab.org/\"\n    wordslab.org/source: \"https://github.com/wordslab-org/wordslab/tree/main/wordslab.manager/apps/notebooks/wordslab-notebooks-gpu-app.yaml\"\n    wordslab.org/author: \"https://github.com/wordslab-org\"\n    wordslab.org/license: \"Apache License Version 2.0\"\n    wordslab.org/ingressroute-path: \"/lab | Jupyterlab\"\n    wordslab.org/ingressroute-path1: \"/gradio | Web interface (port 7860)\"\n    wordslab.org/ingressroute-path2: \"/fastapi | API endpoint (port 8000)\"\nspec:\n  entryPoints:\n    - web\n  routes:\n  - match: PathPrefix(`/$$namespace$$`)\n    kind: Rule\n    services:\n    - name: wordslab-notebooks-service\n      port: 8888\n  - match: PathPrefix(`/$$namespace$$/gradio`)\n    kind: Rule\n    services:\n    - name: wordslab-gradio-service\n      port: 7860\n  - match: PathPrefix(`/$$namespace$$/fastapi`)\n    kind: Rule\n    services:\n    - name: wordslab-fastapi-service\n      port: 8000\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: wordslab-notebooks-service\n  labels:\n    wordslab.org/app: wordslab-notebooks\n    wordslab.org/component: jupyterlab\nspec:\n  type: ClusterIP\n  ports:\n    - port: 8888\n      targetPort: http\n      protocol: TCP\n      name: http\n  selector:\n    wordslab.org/app: wordslab-notebooks\n    wordslab.org/component: jupyterlab\n---\nkind: \"PersistentVolumeClaim\"\napiVersion: \"v1\"\nmetadata:\n  name: wordslab-notebooks-workspace-volume\n  labels:\n    wordslab.org/app: wordslab-notebooks\n    wordslab.org/component: workspace-volume\n  annotations:\n    wordslab.org/title: \"User projects files and data\"\n    wordslab.org/description: \"Volume where the user projects repositories are stored\"\nspec:\n  accessModes:\n    - \"ReadWriteOnce\"\n  storageClassName: local-path\n  resources:\n    requests:\n      storage: 5Gi\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: wordslab-notebooks-deployment\n  labels:\n    wordslab.org/app: wordslab-notebooks\n    wordslab.org/component: jupyterlab\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      wordslab.org/app: wordslab-notebooks\n      wordslab.org/component: jupyterlab\n  template:\n    metadata:\n      labels:\n        wordslab.org/app: wordslab-notebooks\n        wordslab.org/component: jupyterlab\n    spec:\n      containers:\n      - name: wordslab-jupyter-stack-container\n        image: ghcr.io/wordslab-org/jupyter-stack-cuda:jupyterlab-3.6.5-lambda-0.1.14-22.04.1_2\n        ports:\n        - name: http\n          containerPort: 8888\n          protocol: TCP\n</code></pre>"},{"location":"wordslab-host-commands/","title":"Managing Local virtual machines","text":"<p>Command line syntax to manage your local virtual machines:</p> <p>wordslab host : Manage wordslab virtual machines on your host machine</p>"},{"location":"wordslab-host-commands/#host-machine-sandbox","title":"Host machine sandbox","text":"<p>wordslab host init : Install software prequisites and initialize your host machine sandbox</p> <p>wordslab host config show : Display host machine sandbox configuration</p> <p>wordslab host config update : Update host machine sandbox configuration</p>"},{"location":"wordslab-host-commands/#local-virtual-machines","title":"Local virtual machines","text":"<p>wordslab host vm : Create and manage virtual machines on your host machine</p> <p>wordslab host vm list : List all wordslab virtual machines created on your local host</p> <p>wordslab host vm create [name] [OPTIONS] : Create a new wordslab virtual machine on your local host - [name] : Virtual machine name - --minimum : Use minimum compute and storage config - --recommended : Use recommended compute and storage config - --maximum : Use maximum compute and storage config</p> <p>wordslab host vm start [name] [OPTIONS] : Start a local wordslab virtual machine on your local host - [name] : Virtual machine name - --minimum        Use minimum compute spec - --recommended    Use recommended compute spec - --maximum        Use maximum compute spec - --proc [number] : Max number of processors - --mem [number] : Max memory size in GB - --gpu : Allow acces to GPU ?</p> <p>wordslab host vm stop [name] : Stop a local wordslab virtual machine on your local host - [name] : Virtual machine name</p> <p>wordslab host vm status [name] : Display the status of a specific wordslab virtual machine on your local host - [name] : Virtual machine name</p> <p>wordslab host vm advise : Advise a minimum, recommended and maximum config for a local virtual machine</p> <p>wordslab host vm resize [name] : resize an existing wordslab virtual machine on your local host - [name] : Virtual machine name</p> <p>wordslab host vm delete [name] : DANGER - Delete a local wordslab virtual machine - ALL DATA WILL BE LOST - [name] : Virtual machine name</p>"},{"location":"wordslab-host-commands/#host-machine-system-info","title":"Host machine system info","text":"<p>wordslab host system info : Display host machine hardware and operating system information</p> <p>wordslab host system status : Display host machine usage metrics: cpu, memory, storage, network</p>"}]}